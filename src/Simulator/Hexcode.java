package Simulator;
public class Hexcode
{
  private String[] mnemonic = new String[256];
  private int[][] b = new int[256][4];
  private int tagIndex;
  public Hexcode(){
    mnemonic[0] = "NOP";
    mnemonic[1] = "LXI B";
    mnemonic[2] = "STAX B";
    mnemonic[3] = "INX B";
    mnemonic[4] = "INR B";
    mnemonic[5] = "DCR B";
    mnemonic[6] = "MVI B";
    mnemonic[7] = "RLC";
    mnemonic[8] = "";
    mnemonic[9] = "DAD B";
    mnemonic[10] = "LDAX B";
    mnemonic[11] = "DCX B";
    mnemonic[12] = "INR C";
    mnemonic[13] = "DCR C";
    mnemonic[14] = "MVI C";
    mnemonic[15] = "RRC";
    mnemonic[16] = "";
    mnemonic[17] = "LXI D";
    mnemonic[18] = "STAX D";
    mnemonic[19] = "INX D";
    mnemonic[20] = "INR D";
    mnemonic[21] = "DCR D";
    mnemonic[22] = "MVI D";
    mnemonic[23] = "RAL";
    mnemonic[24] = "";
    mnemonic[25] = "DAD D";
    mnemonic[26] = "LDAX D";
    mnemonic[27] = "DCX D";
    mnemonic[28] = "INR E";
    mnemonic[29] = "DCR E";
    mnemonic[30] = "MVI E";
    mnemonic[31] = "RAR";
    mnemonic[32] = "RIM";
    mnemonic[33] = "LXI H";
    mnemonic[34] = "SHLD";
    mnemonic[35] = "INX H";
    mnemonic[36] = "INR H";
    mnemonic[37] = "DCR H";
    mnemonic[38] = "MVI H";
    mnemonic[39] = "DAA";
    mnemonic[40] = "";
    mnemonic[41] = "DAD H";
    mnemonic[42] = "LHLD";
    mnemonic[43] = "DCX H";
    mnemonic[44] = "INR L";
    mnemonic[45] = "DCR L";
    mnemonic[46] = "MVI L";
    mnemonic[47] = "CMA";
    mnemonic[48] = "SIM";
    mnemonic[49] = "LXI SP";
    mnemonic[50] = "STA";
    mnemonic[51] = "INX SP";
    mnemonic[52] = "INR M";
    mnemonic[53] = "DCR M";
    mnemonic[54] = "MVI M";
    mnemonic[55] = "STC";
    mnemonic[56] = "";
    mnemonic[57] = "DAD SP";
    mnemonic[58] = "LDA";
    mnemonic[59] = "DCX SP";
    mnemonic[60] = "INR A";
    mnemonic[61] = "DCR A";
    mnemonic[62] = "MVI A";
    mnemonic[63] = "CMC";
    mnemonic[64] = "MOV B,B";
    mnemonic[65] = "MOV B,C";
    mnemonic[66] = "MOV B,D";
    mnemonic[67] = "MOV B,E";
    mnemonic[68] = "MOV B,H";
    mnemonic[69] = "MOV B,L";
    mnemonic[70] = "MOV B,M";
    mnemonic[71] = "MOV B,A";
    mnemonic[72] = "MOV C,B";
    mnemonic[73] = "MOV C,C";
    mnemonic[74] = "MOV C,D";
    mnemonic[75] = "MOV C,E";
    mnemonic[76] = "MOV C,H";
    mnemonic[77] = "MOV C,L";
    mnemonic[78] = "MOV C,M";
    mnemonic[79] = "MOV C,A";
    mnemonic[80] = "MOV D,B";
    mnemonic[81] = "MOV D,C";
    mnemonic[82] = "MOV D,D";
    mnemonic[83] = "MOV D,E";
    mnemonic[84] = "MOV D,H";
    mnemonic[85] = "MOV D,L";
    mnemonic[86] = "MOV D,M";
    mnemonic[87] = "MOV D,A";
    mnemonic[88] = "MOV E,B";
    mnemonic[89] = "MOV E,C";
    mnemonic[90] = "MOV E,D";
    mnemonic[91] = "MOV E,E";
    mnemonic[92] = "MOV E,H";
    mnemonic[93] = "MOV E,L";
    mnemonic[94] = "MOV E,M";
    mnemonic[95] = "MOV E,A";
    mnemonic[96] = "MOV H,B";
    mnemonic[97] = "MOV H,C";
    mnemonic[98] = "MOV H,D";
    mnemonic[99] = "MOV H,E";
    mnemonic[100] = "MOV H,H";
    mnemonic[101] = "MOV H,L";
    mnemonic[102] = "MOV H,M";
    mnemonic[103] = "MOV H,A";
    mnemonic[104] = "MOV L,B";
    mnemonic[105] = "MOV L,C";
    mnemonic[106] = "MOV L,D";
    mnemonic[107] = "MOV L,E";
    mnemonic[108] = "MOV L,H";
    mnemonic[109] = "MOV L,L";
    mnemonic[110] = "MOV L,M";
    mnemonic[111] = "MOV L,A";
    mnemonic[112] = "MOV M,B";
    mnemonic[113] = "MOV M,C";
    mnemonic[114] = "MOV M,D";
    mnemonic[115] = "MOV M,E";
    mnemonic[116] = "MOV M,H";
    mnemonic[117] = "MOV M,L";
    mnemonic[118] = "HLT";
    mnemonic[119] = "MOV M,A";
    mnemonic[120] = "MOV A,B";
    mnemonic[121] = "MOV A,C";
    mnemonic[122] = "MOV A,D";
    mnemonic[123] = "MOV A,E";
    mnemonic[124] = "MOV A,H";
    mnemonic[125] = "MOV A,L";
    mnemonic[126] = "MOV A,M";
    mnemonic[127] = "MOV A,A";
    mnemonic[128] = "ADD B";
    mnemonic[129] = "ADD C";
    mnemonic[130] = "ADD D";
    mnemonic[131] = "ADD E";
    mnemonic[132] = "ADD H";
    mnemonic[133] = "ADD L";
    mnemonic[134] = "ADD M";
    mnemonic[135] = "ADD A";
    mnemonic[136] = "ADC B";
    mnemonic[137] = "ADC C";
    mnemonic[138] = "ADC D";
    mnemonic[139] = "ADC E";
    mnemonic[140] = "ADC H";
    mnemonic[141] = "ADC L";
    mnemonic[142] = "ADC M";
    mnemonic[143] = "ADC A";
    mnemonic[144] = "SUB B";
    mnemonic[145] = "SUB C";
    mnemonic[146] = "SUB D";
    mnemonic[147] = "SUB E";
    mnemonic[148] = "SUB H";
    mnemonic[149] = "SUB L";
    mnemonic[150] = "SUB M";
    mnemonic[151] = "SUB A";
    mnemonic[152] = "SBB B";
    mnemonic[153] = "SBB C";
    mnemonic[154] = "SBB D";
    mnemonic[155] = "SBB E";
    mnemonic[156] = "SBB H";
    mnemonic[157] = "SBB L";
    mnemonic[158] = "SBB M";
    mnemonic[159] = "SBB A";
    mnemonic[160] = "ANA B";
    mnemonic[161] = "ANA C";
    mnemonic[162] = "ANA D";
    mnemonic[163] = "ANA E";
    mnemonic[164] = "ANA H";
    mnemonic[165] = "ANA L";
    mnemonic[166] = "ANA M";
    mnemonic[167] = "ANA A";
    mnemonic[168] = "XRA B";
    mnemonic[169] = "XRA C";
    mnemonic[170] = "XRA D";
    mnemonic[171] = "XRA E";
    mnemonic[172] = "XRA H";
    mnemonic[173] = "XRA L";
    mnemonic[174] = "XRA M";
    mnemonic[175] = "XRA A";
    mnemonic[176] = "ORA B";
    mnemonic[177] = "ORA C";
    mnemonic[178] = "ORA D";
    mnemonic[179] = "ORA E";
    mnemonic[180] = "ORA H";
    mnemonic[181] = "ORA L";
    mnemonic[182] = "ORA M";
    mnemonic[183] = "ORA A";
    mnemonic[184] = "CMP B";
    mnemonic[185] = "CMP C";
    mnemonic[186] = "CMP D";
    mnemonic[187] = "CMP E";
    mnemonic[188] = "CMP H";
    mnemonic[189] = "CMP L";
    mnemonic[190] = "CMP M";
    mnemonic[191] = "CMP A";
    mnemonic[192] = "RNZ";
    mnemonic[193] = "POP B";
    mnemonic[194] = "JNZ";
    mnemonic[195] = "JMP";
    mnemonic[196] = "CNZ";
    mnemonic[197] = "PUSH B";
    mnemonic[198] = "ADI";
    mnemonic[199] = "RST 0";
    mnemonic[200] = "RZ";
    mnemonic[201] = "RET";
    mnemonic[202] = "JZ";
    mnemonic[203] = "";
    mnemonic[204] = "CZ";
    mnemonic[205] = "CALL";
    mnemonic[206] = "ACI";
    mnemonic[207] = "RST 1";
    mnemonic[208] = "RNC";
    mnemonic[209] = "POP D";
    mnemonic[210] = "JNC";
    mnemonic[211] = "OUT";
    mnemonic[212] = "CNC";
    mnemonic[213] = "PUSH D";
    mnemonic[214] = "SUI";
    mnemonic[215] = "RST 2";
    mnemonic[216] = "RC";
    mnemonic[217] = "";
    mnemonic[218] = "JC";
    mnemonic[219] = "IN";
    mnemonic[220] = "CC";
    mnemonic[221] = "";
    mnemonic[222] = "SBI";
    mnemonic[223] = "RST 3";
    mnemonic[224] = "RPO";
    mnemonic[225] = "POP H";
    mnemonic[226] = "JPO";
    mnemonic[227] = "XTHL";
    mnemonic[228] = "CPO";
    mnemonic[229] = "PUSH H";
    mnemonic[230] = "ANI";
    mnemonic[231] = "RST";
    mnemonic[232] = "RPE";
    mnemonic[233] = "PCHL";
    mnemonic[234] = "JPE";
    mnemonic[235] = "XCHG";
    mnemonic[236] = "CPE";
    mnemonic[237] = "";
    mnemonic[238] = "XRI";
    mnemonic[239] = "RST 5";
    mnemonic[240] = "RP";
    mnemonic[241] = "POP PSW";
    mnemonic[242] = "JP";
    mnemonic[243] = "DI";
    mnemonic[244] = "CP";
    mnemonic[245] = "PUSH PSW";
    mnemonic[246] = "ORI";
    mnemonic[247] = "RST 6";
    mnemonic[248] = "RM";
    mnemonic[249] = "SPHL";
    mnemonic[250] = "JM";
    mnemonic[251] = "EI";
    mnemonic[252] = "CM";
    mnemonic[253] = "";
    mnemonic[254] = "CPI";
    mnemonic[255] = "RST 7";
  

 
    b[0][0] = 1;
    b[0][1] = 1;
    b[0][2] = 4;
    b[0][3] = 8;
    b[1][0] = 3;
    b[1][1] = 3;
    b[1][2] = 10;
    b[1][3] = 4;
    b[2][0] = 1;
    b[2][1] = 2;
    b[2][2] = 7;
    b[2][3] = 4;
    b[3][0] = 1;
    b[3][1] = 1;
    b[3][2] = 6;
    b[3][3] = 4;
    b[4][0] = 1;
    b[4][1] = 1;
    b[4][2] = 4;
    b[4][3] = 3;
    b[5][0] = 1;
    b[5][1] = 1;
    b[5][2] = 4;
    b[5][3] = 3;
    b[6][0] = 2;
    b[6][1] = 2;
    b[6][2] = 7;
    b[6][3] = 2;
    b[7][0] = 1;
    b[7][1] = 1;
    b[7][2] = 4;
    b[7][3] = 1;
    b[8][0] = 0;
    b[8][1] = 0;
    b[8][2] = 0;
    b[8][3] = 1;
    b[9][0] = 1;
    b[9][1] = 3;
    b[9][2] = 10;
    b[9][3] = 4;
    b[10][0] = 1;
    b[10][1] = 2;
    b[10][2] = 7;
    b[10][3] = 4;
    b[11][0] = 1;
    b[11][1] = 1;
    b[11][2] = 6;
    b[11][3] = 4;
    b[12][0] = 1;
    b[12][1] = 1;
    b[12][2] = 4;
    b[12][3] = 3;
    b[13][0] = 2;
    b[13][1] = 1;
    b[13][2] = 4;
    b[13][3] = 3;
    b[14][0] = 2;
    b[14][1] = 2;
    b[14][2] = 7;
    b[14][3] = 2;
    b[15][0] = 1;
    b[15][1] = 1;
    b[15][2] = 4;
    b[15][3] = 1;
    b[16][0] = 0;
    b[16][1] = 0;
    b[16][2] = 0;
    b[16][3] = 1;
    b[17][0] = 3;
    b[17][1] = 3;
    b[17][2] = 10;
    b[17][3] = 4;
    b[18][0] = 1;
    b[18][1] = 2;
    b[18][2] = 7;
    b[18][3] = 4;
    b[19][0] = 1;
    b[19][1] = 1;
    b[19][2] = 6;
    b[19][3] = 4;
    b[20][0] = 1;
    b[20][1] = 1;
    b[20][2] = 4;
    b[20][3] = 3;
    b[21][0] = 1;
    b[21][1] = 1;
    b[21][2] = 4;
    b[21][3] = 3;
    b[22][0] = 2;
    b[22][1] = 2;
    b[22][2] = 7;
    b[22][3] = 2;
    b[23][0] = 1;
    b[23][1] = 1;
    b[23][2] = 4;
    b[23][3] = 1;
    b[24][0] = 0;
    b[24][1] = 0;
    b[24][2] = 0;
    b[24][3] = 1;
    b[25][0] = 1;
    b[25][1] = 3;
    b[25][2] = 10;
    b[25][3] = 4;
    b[26][0] = 1;
    b[26][1] = 2;
    b[26][2] = 7;
    b[26][3] = 4;
    b[27][0] = 1;
    b[27][1] = 1;
    b[27][2] = 6;
    b[27][3] = 4;
    b[28][0] = 1;
    b[28][1] = 1;
    b[28][2] = 4;
    b[28][3] = 3;
    b[29][0] = 1;
    b[29][1] = 1;
    b[29][2] = 4;
    b[29][3] = 3;
    b[30][0] = 2;
    b[30][1] = 2;
    b[30][2] = 7;
    b[30][3] = 2;
    b[31][0] = 1;
    b[31][1] = 1;
    b[31][2] = 4;
    b[31][3] = 1;
    b[32][0] = 1;
    b[32][1] = 1;
    b[32][2] = 4;
    b[32][3] = 1;
    b[33][0] = 3;
    b[33][1] = 3;
    b[33][2] = 10;
    b[33][3] = 4;
    b[34][0] = 3;
    b[34][1] = 5;
    b[34][2] = 16;
    b[34][3] = 1;
    b[35][0] = 1;
    b[35][1] = 1;
    b[35][2] = 6;
    b[35][3] = 4;
    b[36][0] = 1;
    b[36][1] = 1;
    b[36][2] = 4;
    b[36][3] = 3;
    b[37][0] = 1;
    b[37][1] = 1;
    b[37][2] = 4;
    b[37][3] = 3;
    b[38][0] = 2;
    b[38][1] = 2;
    b[38][2] = 7;
    b[38][3] = 2;
    b[39][0] = 1;
    b[39][1] = 1;
    b[39][2] = 4;
    b[39][3] = 1;
    b[40][0] = 0;
    b[40][1] = 0;
    b[40][2] = 0;
    b[40][3] = 1;
    b[41][0] = 1;
    b[41][1] = 3;
    b[41][2] = 10;
    b[41][3] = 4;
    b[42][0] = 3;
    b[42][1] = 5;
    b[42][2] = 16;
    b[42][3] = 1;
    b[43][0] = 1;
    b[43][1] = 1;
    b[43][2] = 6;
    b[43][3] = 4;
    b[44][0] = 1;
    b[44][1] = 1;
    b[44][2] = 4;
    b[44][3] = 3;
    b[45][0] = 1;
    b[45][1] = 1;
    b[45][2] = 4;
    b[45][3] = 3;
    b[46][0] = 2;
    b[46][1] = 2;
    b[46][2] = 7;
    b[46][3] = 2;
    b[47][0] = 1;
    b[47][1] = 1;
    b[47][2] = 4;
    b[47][3] = 8;
    b[48][0] = 1;
    b[48][1] = 1;
    b[48][2] = 4;
    b[48][3] = 1;
    b[49][0] = 3;
    b[49][1] = 3;
    b[49][2] = 10;
    b[49][3] = 4;
    b[50][0] = 3;
    b[50][1] = 4;
    b[50][2] = 13;
    b[50][3] = 8;
    b[51][0] = 1;
    b[51][1] = 1;
    b[51][2] = 6;
    b[51][3] = 4;
    b[52][0] = 1;
    b[52][1] = 3;
    b[52][2] = 10;
    b[52][3] = 3;
    b[53][0] = 1;
    b[53][1] = 3;
    b[53][2] = 10;
    b[53][3] = 3;
    b[54][0] = 2;
    b[54][1] = 3;
    b[54][2] = 10;
    b[54][3] = 2;
    b[55][0] = 1;
    b[55][1] = 1;
    b[55][2] = 4;
    b[55][3] = 1;
    b[56][0] = 0;
    b[56][1] = 0;
    b[56][2] = 0;
    b[56][3] = 1;
    b[57][0] = 1;
    b[57][1] = 3;
    b[57][2] = 10;
    b[57][3] = 4;
    b[58][0] = 3;
    b[58][1] = 4;
    b[58][2] = 13;
    b[58][3] = 8;
    b[59][0] = 1;
    b[59][1] = 1;
    b[59][2] = 6;
    b[59][3] = 4;
    b[60][0] = 1;
    b[60][1] = 1;
    b[60][2] = 4;
    b[60][3] = 3;
    b[61][0] = 1;
    b[61][1] = 1;
    b[61][2] = 4;
    b[61][3] = 3;
    b[62][0] = 2;
    b[62][1] = 2;
    b[62][2] = 7;
    b[62][3] = 2;
    b[63][0] = 1;
    b[63][1] = 1;
    b[63][2] = 4;
    b[63][3] = 8;
    b[64][0] = 1;
    b[64][1] = 1;
    b[64][2] = 4;
    b[64][3] = 2;
    b[65][0] = 1;
    b[65][1] = 1;
    b[65][2] = 4;
    b[65][3] = 2;
    b[66][0] = 1;
    b[66][1] = 1;
    b[66][2] = 4;
    b[66][3] = 2;
    b[67][0] = 1;
    b[67][1] = 1;
    b[67][2] = 4;
    b[67][3] = 2;
    b[68][0] = 1;
    b[68][1] = 1;
    b[68][2] = 4;
    b[68][3] = 2;
    b[69][0] = 1;
    b[69][1] = 1;
    b[69][2] = 4;
    b[69][3] = 2;
    b[70][0] = 1;
    b[70][1] = 2;
    b[70][2] = 7;
    b[70][3] = 2;
    b[71][0] = 1;
    b[71][1] = 1;
    b[71][2] = 4;
    b[71][3] = 2;
    b[72][0] = 1;
    b[72][1] = 1;
    b[72][2] = 4;
    b[72][3] = 2;
    b[73][0] = 1;
    b[73][1] = 1;
    b[73][2] = 4;
    b[73][3] = 2;
    b[74][0] = 1;
    b[74][1] = 1;
    b[74][2] = 4;
    b[74][3] = 2;
    b[75][0] = 1;
    b[75][1] = 1;
    b[75][2] = 4;
    b[75][3] = 2;
    b[76][0] = 1;
    b[76][1] = 1;
    b[76][2] = 4;
    b[76][3] = 2;
    b[77][0] = 1;
    b[77][1] = 1;
    b[77][2] = 4;
    b[77][3] = 2;
    b[78][0] = 1;
    b[78][1] = 2;
    b[78][2] = 7;
    b[78][3] = 2;
    b[79][0] = 1;
    b[79][1] = 1;
    b[79][2] = 4;
    b[79][3] = 2;
    b[80][0] = 1;
    b[80][1] = 1;
    b[80][2] = 4;
    b[80][3] = 2;
    b[81][0] = 1;
    b[81][1] = 1;
    b[81][2] = 4;
    b[81][3] = 2;
    b[82][0] = 1;
    b[82][1] = 1;
    b[82][2] = 4;
    b[82][3] = 2;
    b[83][0] = 1;
    b[83][1] = 1;
    b[83][2] = 4;
    b[83][3] = 2;
    b[84][0] = 1;
    b[84][1] = 1;
    b[84][2] = 4;
    b[84][3] = 2;
    b[85][0] = 1;
    b[85][1] = 1;
    b[85][2] = 4;
    b[85][3] = 2;
    b[86][0] = 1;
    b[86][1] = 2;
    b[86][2] = 7;
    b[86][3] = 2;
    b[87][0] = 1;
    b[87][1] = 1;
    b[87][2] = 4;
    b[87][3] = 2;
    b[88][0] = 1;
    b[88][1] = 1;
    b[88][2] = 4;
    b[88][3] = 2;
    b[89][0] = 1;
    b[89][1] = 1;
    b[89][2] = 4;
    b[89][3] = 2;
    b[90][0] = 1;
    b[90][1] = 1;
    b[90][2] = 4;
    b[90][3] = 2;
    b[91][0] = 1;
    b[91][1] = 1;
    b[91][2] = 4;
    b[91][3] = 2;
    b[92][0] = 1;
    b[92][1] = 1;
    b[92][2] = 4;
    b[92][3] = 2;
    b[93][0] = 1;
    b[93][1] = 1;
    b[93][2] = 4;
    b[93][3] = 2;
    b[94][0] = 1;
    b[94][1] = 2;
    b[94][2] = 7;
    b[94][3] = 2;
    b[95][0] = 1;
    b[95][1] = 1;
    b[95][2] = 4;
    b[95][3] = 2;
    b[96][0] = 1;
    b[96][1] = 1;
    b[96][2] = 4;
    b[96][3] = 2;
    b[97][0] = 1;
    b[97][1] = 1;
    b[97][2] = 4;
    b[97][3] = 2;
    b[98][0] = 1;
    b[98][1] = 1;
    b[98][2] = 4;
    b[98][3] = 2;
    b[99][0] = 1;
    b[99][1] = 1;
    b[99][2] = 4;
    b[99][3] = 2;
    b[100][0] = 1;
    b[100][1] = 1;
    b[100][2] = 4;
    b[100][3] = 2;
    b[101][0] = 1;
    b[101][1] = 1;
    b[101][2] = 4;
    b[101][3] = 2;
    b[102][0] = 1;
    b[102][1] = 2;
    b[102][2] = 7;
    b[102][3] = 2;
    b[103][0] = 1;
    b[103][1] = 1;
    b[103][2] = 4;
    b[103][3] = 2;
    b[104][0] = 1;
    b[104][1] = 1;
    b[104][2] = 4;
    b[104][3] = 2;
    b[105][0] = 1;
    b[105][1] = 1;
    b[105][2] = 4;
    b[105][3] = 2;
    b[106][0] = 1;
    b[106][1] = 1;
    b[106][2] = 4;
    b[106][3] = 2;
    b[107][0] = 1;
    b[107][1] = 1;
    b[107][2] = 4;
    b[107][3] = 2;
    b[108][0] = 1;
    b[108][1] = 1;
    b[108][2] = 4;
    b[108][3] = 2;
    b[109][0] = 1;
    b[109][1] = 1;
    b[109][2] = 4;
    b[109][3] = 2;
    b[110][0] = 1;
    b[110][1] = 2;
    b[110][2] = 7;
    b[110][3] = 2;
    b[111][0] = 1;
    b[111][1] = 1;
    b[111][2] = 4;
    b[111][3] = 2;
    b[112][0] = 1;
    b[112][1] = 2;
    b[112][2] = 7;
    b[112][3] = 2;
    b[113][0] = 1;
    b[113][1] = 2;
    b[113][2] = 7;
    b[113][3] = 2;
    b[114][0] = 1;
    b[114][1] = 2;
    b[114][2] = 7;
    b[114][3] = 2;
    b[115][0] = 1;
    b[115][1] = 2;
    b[115][2] = 7;
    b[115][3] = 2;
    b[116][0] = 1;
    b[116][1] = 2;
    b[116][2] = 7;
    b[116][3] = 2;
    b[117][0] = 1;
    b[117][1] = 2;
    b[117][2] = 7;
    b[117][3] = 2;
    b[118][0] = 1;
    b[118][1] = 2;
    b[118][2] = 7;
    b[118][3] = 8;
    b[119][0] = 1;
    b[119][1] = 2;
    b[119][2] = 7;
    b[119][3] = 2;
    b[120][0] = 1;
    b[120][1] = 1;
    b[120][2] = 4;
    b[120][3] = 2;
    b[121][0] = 1;
    b[121][1] = 1;
    b[121][2] = 4;
    b[121][3] = 2;
    b[122][0] = 1;
    b[122][1] = 1;
    b[122][2] = 4;
    b[122][3] = 2;
    b[123][0] = 1;
    b[123][1] = 1;
    b[123][2] = 4;
    b[123][3] = 2;
    b[124][0] = 1;
    b[124][1] = 1;
    b[124][2] = 4;
    b[124][3] = 2;
    b[125][0] = 1;
    b[125][1] = 1;
    b[125][2] = 4;
    b[125][3] = 2;
    b[126][0] = 1;
    b[126][1] = 2;
    b[126][2] = 7;
    b[126][3] = 2;
    b[127][0] = 1;
    b[127][1] = 1;
    b[127][2] = 4;
    b[127][3] = 2;
    b[128][0] = 1;
    b[128][1] = 1;
    b[128][2] = 4;
    b[128][3] = 5;
    b[129][0] = 1;
    b[129][1] = 1;
    b[129][2] = 4;
    b[129][3] = 5;
    b[130][0] = 1;
    b[130][1] = 1;
    b[130][2] = 4;
    b[130][3] = 5;
    b[131][0] = 1;
    b[131][1] = 1;
    b[131][2] = 4;
    b[131][3] = 5;
    b[132][0] = 1;
    b[132][1] = 1;
    b[132][2] = 4;
    b[132][3] = 5;
    b[133][0] = 1;
    b[133][1] = 1;
    b[133][2] = 4;
    b[133][3] = 5;
    b[134][0] = 1;
    b[134][1] = 2;
    b[134][2] = 7;
    b[134][3] = 5;
    b[135][0] = 1;
    b[135][1] = 1;
    b[135][2] = 4;
    b[135][3] = 5;
    b[136][0] = 1;
    b[136][1] = 1;
    b[136][2] = 4;
    b[136][3] = 5;
    b[137][0] = 1;
    b[137][1] = 1;
    b[137][2] = 4;
    b[137][3] = 5;
    b[138][0] = 1;
    b[138][1] = 1;
    b[138][2] = 4;
    b[138][3] = 5;
    b[139][0] = 1;
    b[139][1] = 1;
    b[139][2] = 4;
    b[139][3] = 5;
    b[140][0] = 1;
    b[140][1] = 1;
    b[140][2] = 4;
    b[140][3] = 5;
    b[141][0] = 1;
    b[141][1] = 1;
    b[141][2] = 4;
    b[141][3] = 5;
    b[142][0] = 1;
    b[142][1] = 2;
    b[142][2] = 7;
    b[142][3] = 5;
    b[143][0] = 1;
    b[143][1] = 1;
    b[143][2] = 4;
    b[143][3] = 5;
    b[144][0] = 1;
    b[144][1] = 1;
    b[144][2] = 4;
    b[144][3] = 5;
    b[145][0] = 1;
    b[145][1] = 1;
    b[145][2] = 4;
    b[145][3] = 5;
    b[146][0] = 1;
    b[146][1] = 1;
    b[146][2] = 4;
    b[146][3] = 5;
    b[147][0] = 1;
    b[147][1] = 1;
    b[147][2] = 4;
    b[147][3] = 5;
    b[148][0] = 1;
    b[148][1] = 1;
    b[148][2] = 4;
    b[148][3] = 5;
    b[149][0] = 1;
    b[149][1] = 1;
    b[149][2] = 4;
    b[149][3] = 5;
    b[150][0] = 1;
    b[150][1] = 2;
    b[150][2] = 7;
    b[150][3] = 5;
    b[151][0] = 1;
    b[151][1] = 1;
    b[151][2] = 4;
    b[151][3] = 5;
    b[152][0] = 1;
    b[152][1] = 1;
    b[152][2] = 4;
    b[152][3] = 5;
    b[153][0] = 1;
    b[153][1] = 1;
    b[153][2] = 4;
    b[153][3] = 5;
    b[154][0] = 1;
    b[154][1] = 1;
    b[154][2] = 4;
    b[154][3] = 5;
    b[155][0] = 1;
    b[155][1] = 1;
    b[155][2] = 4;
    b[155][3] = 5;
    b[156][0] = 1;
    b[156][1] = 1;
    b[156][2] = 4;
    b[156][3] = 5;
    b[157][0] = 1;
    b[157][1] = 1;
    b[157][2] = 4;
    b[157][3] = 5;
    b[158][0] = 1;
    b[158][1] = 2;
    b[158][2] = 7;
    b[158][3] = 5;
    b[159][0] = 1;
    b[159][1] = 1;
    b[159][2] = 4;
    b[159][3] = 5;
    b[160][0] = 1;
    b[160][1] = 1;
    b[160][2] = 4;
    b[160][3] = 5;
    b[161][0] = 1;
    b[161][1] = 1;
    b[161][2] = 4;
    b[161][3] = 5;
    b[162][0] = 1;
    b[162][1] = 1;
    b[162][2] = 4;
    b[162][3] = 5;
    b[163][0] = 1;
    b[163][1] = 1;
    b[163][2] = 4;
    b[163][3] = 5;
    b[164][0] = 1;
    b[164][1] = 1;
    b[164][2] = 4;
    b[164][3] = 5;
    b[165][0] = 1;
    b[165][1] = 1;
    b[165][2] = 4;
    b[165][3] = 5;
    b[166][0] = 1;
    b[166][1] = 2;
    b[166][2] = 7;
    b[166][3] = 5;
    b[167][0] = 1;
    b[167][1] = 1;
    b[167][2] = 4;
    b[167][3] = 5;
    b[168][0] = 1;
    b[168][1] = 1;
    b[168][2] = 4;
    b[168][3] = 5;
    b[169][0] = 1;
    b[169][1] = 1;
    b[169][2] = 4;
    b[169][3] = 5;
    b[170][0] = 1;
    b[170][1] = 1;
    b[170][2] = 4;
    b[170][3] = 5;
    b[171][0] = 1;
    b[171][1] = 1;
    b[171][2] = 4;
    b[171][3] = 5;
    b[172][0] = 1;
    b[172][1] = 1;
    b[172][2] = 4;
    b[172][3] = 5;
    b[173][0] = 1;
    b[173][1] = 1;
    b[173][2] = 4;
    b[173][3] = 5;
    b[174][0] = 1;
    b[174][1] = 2;
    b[174][2] = 7;
    b[174][3] = 5;
    b[175][0] = 1;
    b[175][1] = 1;
    b[175][2] = 4;
    b[175][3] = 5;
    b[176][0] = 1;
    b[176][1] = 1;
    b[176][2] = 4;
    b[176][3] = 5;
    b[177][0] = 1;
    b[177][1] = 1;
    b[177][2] = 4;
    b[177][3] = 5;
    b[178][0] = 1;
    b[178][1] = 1;
    b[178][2] = 4;
    b[178][3] = 5;
    b[179][0] = 1;
    b[179][1] = 1;
    b[179][2] = 4;
    b[179][3] = 5;
    b[180][0] = 1;
    b[180][1] = 1;
    b[180][2] = 4;
    b[180][3] = 5;
    b[181][0] = 1;
    b[181][1] = 1;
    b[181][2] = 4;
    b[181][3] = 5;
    b[182][0] = 1;
    b[182][1] = 2;
    b[182][2] = 7;
    b[182][3] = 5;
    b[183][0] = 1;
    b[183][1] = 1;
    b[183][2] = 4;
    b[183][3] = 5;
    b[184][0] = 1;
    b[184][1] = 1;
    b[184][2] = 4;
    b[184][3] = 5;
    b[185][0] = 1;
    b[185][1] = 1;
    b[185][2] = 4;
    b[185][3] = 5;
    b[186][0] = 1;
    b[186][1] = 1;
    b[186][2] = 4;
    b[186][3] = 5;
    b[187][0] = 1;
    b[187][1] = 1;
    b[187][2] = 4;
    b[187][3] = 5;
    b[188][0] = 1;
    b[188][1] = 1;
    b[188][2] = 4;
    b[188][3] = 5;
    b[189][0] = 1;
    b[189][1] = 1;
    b[189][2] = 4;
    b[189][3] = 5;
    b[190][0] = 1;
    b[190][1] = 2;
    b[190][2] = 7;
    b[190][3] = 5;
    b[191][0] = 1;
    b[191][1] = 1;
    b[191][2] = 4;
    b[191][3] = 5;
    b[192][0] = 1;
    b[192][1] = 3;
    b[192][2] = 10;
    b[192][3] = 1;
    b[193][0] = 1;
    b[193][1] = 3;
    b[193][2] = 10;
    b[193][3] = 4;
    b[194][0] = 3;
    b[194][1] = 3;
    b[194][2] = 10;
    b[194][3] = 6;
    b[195][0] = 3;
    b[195][1] = 3;
    b[195][2] = 10;
    b[195][3] = 6;
    b[196][0] = 3;
    b[196][1] = 5;
    b[196][2] = 18;
    b[196][3] = 1;
    b[197][0] = 1;
    b[197][1] = 3;
    b[197][2] = 12;
    b[197][3] = 4;
    b[198][0] = 2;
    b[198][1] = 2;
    b[198][2] = 7;
    b[198][3] = 5;
    b[199][0] = 1;
    b[199][1] = 3;
    b[199][2] = 12;
    b[199][3] = 1;
    b[200][0] = 1;
    b[200][1] = 3;
    b[200][2] = 10;
    b[200][3] = 1;
    b[201][0] = 1;
    b[201][1] = 3;
    b[201][2] = 10;
    b[201][3] = 1;
    b[202][0] = 3;
    b[202][1] = 3;
    b[202][2] = 10;
    b[202][3] = 6;
    b[203][0] = 0;
    b[203][1] = 0;
    b[203][2] = 0;
    b[203][3] = 1;
    b[204][0] = 3;
    b[204][1] = 5;
    b[204][2] = 18;
    b[204][3] = 1;
    b[205][0] = 3;
    b[205][1] = 5;
    b[205][2] = 18;
    b[205][3] = 1;
    b[206][0] = 2;
    b[206][1] = 2;
    b[206][2] = 7;
    b[206][3] = 5;
    b[207][0] = 1;
    b[207][1] = 3;
    b[207][2] = 12;
    b[207][3] = 1;
    b[208][0] = 1;
    b[208][1] = 3;
    b[208][2] = 10;
    b[208][3] = 1;
    b[209][0] = 1;
    b[209][1] = 3;
    b[209][2] = 10;
    b[209][3] = 4;
    b[210][0] = 3;
    b[210][1] = 3;
    b[210][2] = 10;
    b[210][3] = 6;
    b[211][0] = 2;
    b[211][1] = 3;
    b[211][2] = 10;
    b[211][3] = 8;
    b[212][0] = 3;
    b[212][1] = 5;
    b[212][2] = 18;
    b[212][3] = 1;
    b[213][0] = 1;
    b[213][1] = 3;
    b[213][2] = 12;
    b[213][3] = 4;
    b[214][0] = 2;
    b[214][1] = 2;
    b[214][2] = 7;
    b[214][3] = 5;
    b[215][0] = 1;
    b[215][1] = 3;
    b[215][2] = 12;
    b[215][3] = 1;
    b[216][0] = 1;
    b[216][1] = 3;
    b[216][2] = 10;
    b[216][3] = 1;
    b[217][0] = 0;
    b[217][1] = 0;
    b[217][2] = 0;
    b[217][3] = 1;
    b[218][0] = 3;
    b[218][1] = 3;
    b[218][2] = 10;
    b[218][3] = 6;
    b[219][0] = 2;
    b[219][1] = 3;
    b[219][2] = 10;
    b[219][3] = 8;
    b[220][0] = 3;
    b[220][1] = 5;
    b[220][2] = 18;
    b[220][3] = 1;
    b[221][0] = 0;
    b[221][1] = 0;
    b[221][2] = 0;
    b[221][3] = 1;
    b[222][0] = 2;
    b[222][1] = 2;
    b[222][2] = 7;
    b[222][3] = 5;
    b[223][0] = 1;
    b[223][1] = 3;
    b[223][2] = 12;
    b[223][3] = 1;
    b[224][0] = 1;
    b[224][1] = 3;
    b[224][2] = 10;
    b[224][3] = 1;
    b[225][0] = 1;
    b[225][1] = 3;
    b[225][2] = 10;
    b[225][3] = 4;
    b[226][0] = 3;
    b[226][1] = 3;
    b[226][2] = 10;
    b[226][3] = 6;
    b[227][0] = 1;
    b[227][1] = 5;
    b[227][2] = 16;
    b[227][3] = 1;
    b[228][0] = 3;
    b[228][1] = 5;
    b[228][2] = 18;
    b[228][3] = 1;
    b[229][0] = 1;
    b[229][1] = 3;
    b[229][2] = 12;
    b[229][3] = 4;
    b[230][0] = 2;
    b[230][1] = 2;
    b[230][2] = 7;
    b[230][3] = 5;
    b[231][0] = 1;
    b[231][1] = 3;
    b[231][2] = 12;
    b[231][3] = 1;
    b[232][0] = 1;
    b[232][1] = 3;
    b[232][2] = 10;
    b[232][3] = 1;
    b[233][0] = 1;
    b[233][1] = 1;
    b[233][2] = 6;
    b[233][3] = 8;
    b[234][0] = 3;
    b[234][1] = 3;
    b[234][2] = 10;
    b[234][3] = 6;
    b[235][0] = 1;
    b[235][1] = 1;
    b[235][2] = 4;
    b[235][3] = 1;
    b[236][0] = 3;
    b[236][1] = 5;
    b[236][2] = 18;
    b[236][3] = 1;
    b[237][0] = 0;
    b[237][1] = 0;
    b[237][2] = 0;
    b[237][3] = 1;
    b[238][0] = 2;
    b[238][1] = 2;
    b[238][2] = 7;
    b[238][3] = 5;
    b[239][0] = 1;
    b[239][1] = 3;
    b[239][2] = 12;
    b[239][3] = 1;
    b[240][0] = 1;
    b[240][1] = 3;
    b[240][2] = 10;
    b[240][3] = 1;
    b[241][0] = 1;
    b[241][1] = 3;
    b[241][2] = 10;
    b[241][3] = 4;
    b[242][0] = 3;
    b[242][1] = 3;
    b[242][2] = 10;
    b[242][3] = 6;
    b[243][0] = 1;
    b[243][1] = 1;
    b[243][2] = 4;
    b[243][3] = 1;
    b[244][0] = 3;
    b[244][1] = 5;
    b[244][2] = 18;
    b[244][3] = 1;
    b[245][0] = 1;
    b[245][1] = 3;
    b[245][2] = 12;
    b[245][3] = 4;
    b[246][0] = 2;
    b[246][1] = 2;
    b[246][2] = 7;
    b[246][3] = 5;
    b[247][0] = 1;
    b[247][1] = 3;
    b[247][2] = 12;
    b[247][3] = 1;
    b[248][0] = 1;
    b[248][1] = 3;
    b[248][2] = 10;
    b[248][3] = 1;
    b[249][0] = 3;
    b[249][1] = 3;
    b[249][2] = 6;
    b[249][3] = 1;
    b[250][0] = 3;
    b[250][1] = 3;
    b[250][2] = 10;
    b[250][3] = 6;
    b[251][0] = 1;
    b[251][1] = 1;
    b[251][2] = 4;
    b[251][3] = 1;
    b[252][0] = 3;
    b[252][1] = 5;
    b[252][2] = 18;
    b[252][3] = 1;
    b[253][0] = 0;
    b[253][1] = 0;
    b[253][2] = 0;
    b[253][3] = 1;
    b[254][0] = 2;
    b[254][1] = 2;
    b[254][2] = 7;
    b[254][3] = 3;
    b[255][0] = 1;
    b[255][1] = 3;
    b[255][2] = 12;
    b[255][3] = 1;
  }
 public int numberOfByte(String opcode){
      int i;
      int j = 0;
      for(i=0;i<256;i++){
          if(opcode.equalsIgnoreCase(this.cutOpcode(this.mnemonic[i])))
              break;
          
      } 
      try{
      j=b[i][0];
      }
      catch(Exception ex){
         System.out.println("Invalid Opcode!") ;
      }
      return j;

      
  }
  public String cutOpcode(String str){
      int i=0;
      String str2=new String();
      while(i!=str.length() && str.charAt(i)!=' '){
		  str2+=str.charAt(i);
		  i++;
          
      }
	  return str2;
  }
  public int getHex(String opcode){
      int i;
      for(i=0;i<256;i++){
          if(opcode.equalsIgnoreCase(this.mnemonic[i]))
              break;
          
      } 
      tagIndex=i;
      return i;
  }
  public int getTag(){
      return b[tagIndex][3];
  }
 
}